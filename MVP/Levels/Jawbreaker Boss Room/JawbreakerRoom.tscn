[gd_scene load_steps=114 format=2]

[ext_resource path="res://Environment/Light/light.png" type="Texture" id=1]
[ext_resource path="res://Levels/Jawbreaker Boss Room/Pillar 720p_n.png" type="Texture" id=2]
[ext_resource path="res://Levels/Jawbreaker Boss Room/JawbreakerRoom.gd" type="Script" id=3]
[ext_resource path="res://Environment/Blocks/Forest/TileSets/Tile Pack/Dirt Tile Pack/Dirt_Tile_Pack_333p.png" type="Texture" id=4]
[ext_resource path="res://Environment/Blocks/Forest/TileSets/Tile Pack/Grass Tile Pack/Grass Tile Pack 333p.png" type="Texture" id=5]
[ext_resource path="res://Levels/Jawbreaker Boss Room/Pillar 720p.png" type="Texture" id=6]
[ext_resource path="res://Environment/Blocks/Forest/TileSets/ForestTileMap.tscn" type="PackedScene" id=7]
[ext_resource path="res://Levels/Jawbreaker Boss Room/Jawbreaker Boss Room 720p.png" type="Texture" id=8]
[ext_resource path="res://Levels/Jawbreaker Boss Room/Jawbreaker Boss Room 720p_n.png" type="Texture" id=9]
[ext_resource path="res://Environment/Backgrounds/Forest Backgrounds/Underground Background/Back Textures/UndergroundBackground.tscn" type="PackedScene" id=10]
[ext_resource path="res://Environment/Blocks/Forest/Walls & Puzzles/Puzzles/EnemyCounter.tscn" type="PackedScene" id=11]
[ext_resource path="res://Actors/Enemies/Jawbreaker/Jawbreaker.tscn" type="PackedScene" id=12]
[ext_resource path="res://Actors/Enemies/Bosses/Jaw Breaker/JawbreakerBoss.tscn" type="PackedScene" id=13]
[ext_resource path="res://Environment/Blocks/Forest/Platforms/Breaking Platform/BreakablePlatformShort.tscn" type="PackedScene" id=14]

[sub_resource type="Shader" id=197]
code = "shader_type canvas_item;

uniform float first_stage : hint_range(0.0, 1.0) = 0.5; 
uniform float first_smooth : hint_range(0.0, 1.0) = 0.0; // Lengthens the color transition
uniform float second_stage : hint_range(0.0, 1.0) = 0.0;   // If left at 0, only level 1 is used.
uniform float second_smooth : hint_range(0.0, 1.0) = 0.0;
uniform bool rim_light = false;
uniform float rim_thickness : hint_range(0, 40) = 5.0;
uniform float rim_intense : hint_range(0, 1) = 1.0;
uniform bool rim_extra_thick = false;
uniform float min_light : hint_range(0.0, 1.0) = 0.0;
uniform float mid_light : hint_range(0.0, 1.0) = 0.0;
uniform float max_light : hint_range(0.0, 1.0) = 1.0;
uniform float obj_light_add : hint_range(0.0, 1.0) = 0.0;
// Light height variables
uniform bool fake_light_depth = false;
uniform float obj_height : hint_range(-2048.0, 2048.0) = 0.0; 
uniform float min_scale : hint_range(0.0, 10.0) = 0.2;
uniform float max_scale : hint_range(0.0, 10.0) = 2.0; 
uniform float light_change_thresh : hint_range(0.0, 4080.0) = 0.0;
uniform bool light_fade = false;
uniform float light_fade_end : hint_range(0.0, 4080.0) = 0.0;
uniform bool fake_spot_light = false;
uniform float first_shrink_speed : hint_range(0.0, 120.0) = 0.0; 
uniform float second_shrink_speed : hint_range(0.0, 120.0) = 0.0; 
//---------------Color Override
uniform vec4 before_light_modulate : hint_color = vec4(1.0,1.0,1.0,1.0);

void fragment() {
	vec4 texture_color = texture(TEXTURE, UV);
	if (AT_LIGHT_PASS) {
		COLOR = texture_color;
	} else {
		COLOR = texture_color * before_light_modulate;
	}
}
float light_calc(float light_strength, float would_be_strength) {
	float target_strength = light_strength + would_be_strength * obj_light_add;
	if (target_strength == 0.0) {target_strength = 0.000001;}
	if (would_be_strength == 0.0) {would_be_strength = 1.0;}
	return(target_strength / would_be_strength);
}

void light() {
	float level_1 = first_stage;
	float level_1_smooth = first_smooth;
	float level_2 = second_stage;
	float level_2_smooth = second_smooth;
	//---- Light height calc start ------------------------------------
	//-----------------------------------------------------------------
	if (fake_light_depth) {
		float base_height = LIGHT_HEIGHT;
		float new_height = base_height - obj_height;
		LIGHT_HEIGHT = new_height;
		if (fake_spot_light && obj_height < base_height && light_change_thresh < new_height ){
			if (level_1 != 1.0) {
				level_1 -= (light_change_thresh - new_height) * (first_shrink_speed * .0001);
				if (level_2 != 0.0 && level_2 != 1.0) {
					level_2 -= (light_change_thresh - new_height) * (second_shrink_speed * .0001);
				}
			}
		}
		if (light_fade && new_height > light_change_thresh) {
			float n_height_safety = new_height;
			if (n_height_safety == 0.0) { n_height_safety += 0.01; }
			float light_dist_safety = light_change_thresh;
			if (light_dist_safety == 0.0) { light_dist_safety += 0.001; }
			float new_intens = 1.0;
			float dark_distance = light_fade_end;
			if (dark_distance == 0.0) {dark_distance = 1.0;}
			new_intens = 1.0 - abs(abs(light_dist_safety) - abs(n_height_safety)) / dark_distance;
			float light_drop_a = clamp(LIGHT_COLOR.a * new_intens, 0.0, 1.0);
			LIGHT_COLOR *= light_drop_a;
		}
	}
	//---- Light height calc end --------------------------------------
	
	float mid_range_light = mid_light;
	if (mid_light == 0.0) { mid_range_light = max_light * 0.5; }
	vec3 light_normal = normalize(vec3(LIGHT_VEC, -LIGHT_HEIGHT));
	float would_be_strength = max(dot(-light_normal, NORMAL), 0.0);
//-----Light Rim start------------------------------------------------------
	if (rim_light) {
		vec2 size = TEXTURE_PIXEL_SIZE * rim_thickness;
		float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
		outline *= texture(TEXTURE, UV + vec2(0, size.y)).a;
		outline *= texture(TEXTURE, UV + vec2(size.x, 0)).a;
		outline *= texture(TEXTURE, UV + vec2(0, -size.y)).a;
		if (rim_extra_thick) {
			outline *= texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
			outline *= texture(TEXTURE, UV + vec2(size.x, size.y)).a;
			outline *= texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
			outline *= texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
		}
		outline = 1.0 - outline;

		vec4 color = texture(TEXTURE, UV);
		float rim_cap = outline * color.a * rim_intense * (max_light - min_light);
		LIGHT += rim_cap;
	}
	//-----Light Rim end------------------------------------------------------
	if (would_be_strength > level_1 && level_2 == 0.0 ) {
		float diff = smoothstep(level_1, (level_1 + level_1_smooth), would_be_strength) + min_light;
		if (diff >= max_light) {diff = max_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else if (would_be_strength > level_1 && would_be_strength < level_2 && level_2 != 0.0 ) {
		float diff = smoothstep(level_1, (level_1 + level_1_smooth), would_be_strength) + min_light;
		if (diff >= mid_range_light ) {diff = mid_range_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else if (would_be_strength >= level_2 && level_2 != 0.0 ) {
		float diff = smoothstep(level_2, (level_2 + level_2_smooth), would_be_strength) + mid_range_light;
		if (diff < mid_range_light ) {diff = mid_range_light;}
		if (diff >= max_light) {diff = max_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else { 
		if (min_light != 0.0) { 
			LIGHT_VEC = -NORMAL.xy*length(LIGHT_VEC); 
		}
		LIGHT *= min_light;                                                                                                                                  
	}
}"

[sub_resource type="ShaderMaterial" id=198]
shader = SubResource( 197 )
shader_param/first_stage = 0.5
shader_param/first_smooth = 0.0
shader_param/second_stage = 0.0
shader_param/second_smooth = 0.0
shader_param/rim_light = false
shader_param/rim_thickness = 5.0
shader_param/rim_intense = 1.0
shader_param/rim_extra_thick = false
shader_param/min_light = 0.0
shader_param/mid_light = 0.0
shader_param/max_light = 1.0
shader_param/obj_light_add = 0.0
shader_param/fake_light_depth = false
shader_param/obj_height = 0.0
shader_param/min_scale = 0.2
shader_param/max_scale = 2.0
shader_param/light_change_thresh = 0.0
shader_param/light_fade = false
shader_param/light_fade_end = 0.0
shader_param/fake_spot_light = false
shader_param/first_shrink_speed = 0.0
shader_param/second_shrink_speed = 0.0
shader_param/before_light_modulate = Color( 1, 1, 1, 1 )

[sub_resource type="Shader" id=199]
code = "shader_type canvas_item;

uniform float first_stage : hint_range(0.0, 1.0) = 0.5; 
uniform float first_smooth : hint_range(0.0, 1.0) = 0.0; // Lengthens the color transition
uniform float second_stage : hint_range(0.0, 1.0) = 0.0;   // If left at 0, only level 1 is used.
uniform float second_smooth : hint_range(0.0, 1.0) = 0.0;
uniform bool rim_light = false;
uniform float rim_thickness : hint_range(0, 40) = 5.0;
uniform float rim_intense : hint_range(0, 1) = 1.0;
uniform bool rim_extra_thick = false;
uniform float min_light : hint_range(0.0, 1.0) = 0.0;
uniform float mid_light : hint_range(0.0, 1.0) = 0.0;
uniform float max_light : hint_range(0.0, 1.0) = 1.0;
uniform float obj_light_add : hint_range(0.0, 1.0) = 0.0;
// Light height variables
uniform bool fake_light_depth = false;
uniform float obj_height : hint_range(-2048.0, 2048.0) = 0.0; 
uniform float min_scale : hint_range(0.0, 10.0) = 0.2;
uniform float max_scale : hint_range(0.0, 10.0) = 2.0; 
uniform float light_change_thresh : hint_range(0.0, 4080.0) = 0.0;
uniform bool light_fade = false;
uniform float light_fade_end : hint_range(0.0, 4080.0) = 0.0;
uniform bool fake_spot_light = false;
uniform float first_shrink_speed : hint_range(0.0, 120.0) = 0.0; 
uniform float second_shrink_speed : hint_range(0.0, 120.0) = 0.0; 
//---------------Color Override
uniform vec4 before_light_modulate : hint_color = vec4(1.0,1.0,1.0,1.0);

void fragment() {
	vec4 texture_color = texture(TEXTURE, UV);
	if (AT_LIGHT_PASS) {
		COLOR = texture_color;
	} else {
		COLOR = texture_color * before_light_modulate;
	}
}
float light_calc(float light_strength, float would_be_strength) {
	float target_strength = light_strength + would_be_strength * obj_light_add;
	if (target_strength == 0.0) {target_strength = 0.000001;}
	if (would_be_strength == 0.0) {would_be_strength = 1.0;}
	return(target_strength / would_be_strength);
}

void light() {
	float level_1 = first_stage;
	float level_1_smooth = first_smooth;
	float level_2 = second_stage;
	float level_2_smooth = second_smooth;
	//---- Light height calc start ------------------------------------
	//-----------------------------------------------------------------
	if (fake_light_depth) {
		float base_height = LIGHT_HEIGHT;
		float new_height = base_height - obj_height;
		LIGHT_HEIGHT = new_height;
		if (fake_spot_light && obj_height < base_height && light_change_thresh < new_height ){
			if (level_1 != 1.0) {
				level_1 -= (light_change_thresh - new_height) * (first_shrink_speed * .0001);
				if (level_2 != 0.0 && level_2 != 1.0) {
					level_2 -= (light_change_thresh - new_height) * (second_shrink_speed * .0001);
				}
			}
		}
		if (light_fade && new_height > light_change_thresh) {
			float n_height_safety = new_height;
			if (n_height_safety == 0.0) { n_height_safety += 0.01; }
			float light_dist_safety = light_change_thresh;
			if (light_dist_safety == 0.0) { light_dist_safety += 0.001; }
			float new_intens = 1.0;
			float dark_distance = light_fade_end;
			if (dark_distance == 0.0) {dark_distance = 1.0;}
			new_intens = 1.0 - abs(abs(light_dist_safety) - abs(n_height_safety)) / dark_distance;
			float light_drop_a = clamp(LIGHT_COLOR.a * new_intens, 0.0, 1.0);
			LIGHT_COLOR *= light_drop_a;
		}
	}
	//---- Light height calc end --------------------------------------
	
	float mid_range_light = mid_light;
	if (mid_light == 0.0) { mid_range_light = max_light * 0.5; }
	vec3 light_normal = normalize(vec3(LIGHT_VEC, -LIGHT_HEIGHT));
	float would_be_strength = max(dot(-light_normal, NORMAL), 0.0);
//-----Light Rim start------------------------------------------------------
	if (rim_light) {
		vec2 size = TEXTURE_PIXEL_SIZE * rim_thickness;
		float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
		outline *= texture(TEXTURE, UV + vec2(0, size.y)).a;
		outline *= texture(TEXTURE, UV + vec2(size.x, 0)).a;
		outline *= texture(TEXTURE, UV + vec2(0, -size.y)).a;
		if (rim_extra_thick) {
			outline *= texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
			outline *= texture(TEXTURE, UV + vec2(size.x, size.y)).a;
			outline *= texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
			outline *= texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
		}
		outline = 1.0 - outline;

		vec4 color = texture(TEXTURE, UV);
		float rim_cap = outline * color.a * rim_intense * (max_light - min_light);
		LIGHT += rim_cap;
	}
	//-----Light Rim end------------------------------------------------------
	if (would_be_strength > level_1 && level_2 == 0.0 ) {
		float diff = smoothstep(level_1, (level_1 + level_1_smooth), would_be_strength) + min_light;
		if (diff >= max_light) {diff = max_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else if (would_be_strength > level_1 && would_be_strength < level_2 && level_2 != 0.0 ) {
		float diff = smoothstep(level_1, (level_1 + level_1_smooth), would_be_strength) + min_light;
		if (diff >= mid_range_light ) {diff = mid_range_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else if (would_be_strength >= level_2 && level_2 != 0.0 ) {
		float diff = smoothstep(level_2, (level_2 + level_2_smooth), would_be_strength) + mid_range_light;
		if (diff < mid_range_light ) {diff = mid_range_light;}
		if (diff >= max_light) {diff = max_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else { 
		if (min_light != 0.0) { 
			LIGHT_VEC = -NORMAL.xy*length(LIGHT_VEC); 
		}
		LIGHT *= min_light;                                                                                                                                  
	}
}"

[sub_resource type="ShaderMaterial" id=200]
shader = SubResource( 199 )
shader_param/first_stage = 0.5
shader_param/first_smooth = 0.0
shader_param/second_stage = 0.0
shader_param/second_smooth = 0.0
shader_param/rim_light = true
shader_param/rim_thickness = 5.0
shader_param/rim_intense = 1.0
shader_param/rim_extra_thick = false
shader_param/min_light = 0.0
shader_param/mid_light = 0.0
shader_param/max_light = 1.0
shader_param/obj_light_add = 0.0
shader_param/fake_light_depth = false
shader_param/obj_height = 0.0
shader_param/min_scale = 0.2
shader_param/max_scale = 2.0
shader_param/light_change_thresh = 0.0
shader_param/light_fade = false
shader_param/light_fade_end = 0.0
shader_param/fake_spot_light = false
shader_param/first_shrink_speed = 0.0
shader_param/second_shrink_speed = 0.0
shader_param/before_light_modulate = Color( 1, 1, 1, 1 )

[sub_resource type="ConvexPolygonShape2D" id=104]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=105]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=106]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=107]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=108]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=109]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=110]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=111]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=112]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=113]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=114]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=115]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=116]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=117]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=118]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=119]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=120]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=121]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=122]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=123]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=124]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=125]
points = PoolVector2Array( 0, 320, 320, 320, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=126]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=127]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=128]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=129]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=130]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=131]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=132]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=133]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=134]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=135]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=136]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=137]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=138]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=139]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=140]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=141]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=142]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=143]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=144]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=145]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=146]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=147]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=148]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=149]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=150]
points = PoolVector2Array( 0, 0, 320, 0, 320, 320, 0, 320 )

[sub_resource type="ConvexPolygonShape2D" id=151]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=152]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=153]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=154]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=155]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=156]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=157]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=158]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=159]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=160]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=161]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=162]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=163]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=164]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=165]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=166]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=167]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=168]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=169]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=170]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=171]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=172]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=173]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=174]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=175]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=176]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=177]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=178]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=179]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=180]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=181]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=182]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=183]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=184]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=185]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=186]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=187]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=188]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=189]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=190]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=191]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=192]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=193]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=194]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=195]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="ConvexPolygonShape2D" id=196]
points = PoolVector2Array( 0, 0, 336, 0, 336, 336, 0, 336 )

[sub_resource type="TileSet" id=201]
resource_local_to_scene = true
2/name = "Grass Tile Pack 2160p.png 2"
2/texture = ExtResource( 5 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 0, 7, 3840, 1600 )
2/tile_mode = 1
2/autotile/bitmask_mode = 1
2/autotile/bitmask_flags = [ Vector2( 0, 0 ), 144, Vector2( 0, 1 ), 146, Vector2( 0, 2 ), 18, Vector2( 1, 0 ), 176, Vector2( 1, 1 ), 178, Vector2( 1, 2 ), 50, Vector2( 2, 0 ), 184, Vector2( 2, 1 ), 186, Vector2( 2, 2 ), 58, Vector2( 3, 0 ), 152, Vector2( 3, 1 ), 154, Vector2( 3, 2 ), 26, Vector2( 4, 0 ), 187, Vector2( 4, 1 ), 434, Vector2( 4, 2 ), 182, Vector2( 4, 3 ), 250, Vector2( 5, 0 ), 440, Vector2( 5, 1 ), 510, Vector2( 5, 2 ), 447, Vector2( 5, 3 ), 62, Vector2( 6, 0 ), 248, Vector2( 6, 1 ), 507, Vector2( 6, 2 ), 255, Vector2( 6, 3 ), 59, Vector2( 7, 0 ), 190, Vector2( 7, 1 ), 218, Vector2( 7, 2 ), 155, Vector2( 7, 3 ), 442, Vector2( 8, 0 ), 432, Vector2( 8, 1 ), 438, Vector2( 8, 2 ), 446, Vector2( 8, 3 ), 54, Vector2( 9, 0 ), 506, Vector2( 9, 1 ), 254, Vector2( 9, 2 ), 511, Vector2( 9, 3 ), 63, Vector2( 9, 4 ), 504, Vector2( 10, 0 ), 504, Vector2( 10, 2 ), 443, Vector2( 10, 3 ), 191, Vector2( 10, 4 ), 504, Vector2( 11, 0 ), 216, Vector2( 11, 1 ), 251, Vector2( 11, 2 ), 219, Vector2( 11, 3 ), 27, Vector2( 11, 4 ), 504 ]
2/autotile/icon_coordinate = Vector2( 0, 0 )
2/autotile/tile_size = Vector2( 336, 336 )
2/autotile/spacing = 0
2/autotile/occluder_map = [  ]
2/autotile/navpoly_map = [  ]
2/autotile/priority_map = [  ]
2/autotile/z_index_map = [  ]
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape = SubResource( 104 )
2/shape_one_way = false
2/shape_one_way_margin = 1.0
2/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 104 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 105 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 106 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 107 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 108 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 109 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 110 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 111 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 112 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 113 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 114 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 115 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 116 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 117 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 118 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 119 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 120 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 121 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 122 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 123 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 124 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 125 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 126 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 127 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 128 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 129 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 130 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 131 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 132 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 133 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 134 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 135 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 136 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 137 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 138 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 139 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 140 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 10, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 141 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 142 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 10, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 143 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 144 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 145 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 146 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 10, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 147 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 148 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 10, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 149 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 150 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
2/z_index = 0
3/name = "Dirt_Tile_Pack_2160p.png 3"
3/texture = ExtResource( 4 )
3/tex_offset = Vector2( 0, 0 )
3/modulate = Color( 1, 1, 1, 1 )
3/region = Rect2( 0, 7, 4032, 1680 )
3/tile_mode = 1
3/autotile/bitmask_mode = 1
3/autotile/bitmask_flags = [ Vector2( 0, 0 ), 144, Vector2( 0, 1 ), 146, Vector2( 0, 2 ), 18, Vector2( 1, 0 ), 176, Vector2( 1, 1 ), 178, Vector2( 1, 2 ), 50, Vector2( 2, 0 ), 184, Vector2( 2, 1 ), 186, Vector2( 2, 2 ), 58, Vector2( 3, 0 ), 152, Vector2( 3, 1 ), 154, Vector2( 3, 2 ), 26, Vector2( 4, 0 ), 187, Vector2( 4, 1 ), 434, Vector2( 4, 2 ), 182, Vector2( 4, 3 ), 250, Vector2( 5, 0 ), 440, Vector2( 5, 1 ), 510, Vector2( 5, 2 ), 447, Vector2( 5, 3 ), 62, Vector2( 6, 0 ), 248, Vector2( 6, 1 ), 507, Vector2( 6, 2 ), 255, Vector2( 6, 3 ), 59, Vector2( 7, 0 ), 190, Vector2( 7, 1 ), 218, Vector2( 7, 2 ), 155, Vector2( 7, 3 ), 442, Vector2( 8, 0 ), 432, Vector2( 8, 1 ), 438, Vector2( 8, 2 ), 446, Vector2( 8, 3 ), 54, Vector2( 9, 0 ), 506, Vector2( 9, 1 ), 254, Vector2( 9, 2 ), 511, Vector2( 9, 3 ), 63, Vector2( 9, 4 ), 504, Vector2( 10, 0 ), 504, Vector2( 10, 2 ), 443, Vector2( 10, 3 ), 191, Vector2( 10, 4 ), 504, Vector2( 11, 0 ), 216, Vector2( 11, 1 ), 251, Vector2( 11, 2 ), 219, Vector2( 11, 3 ), 27, Vector2( 11, 4 ), 504 ]
3/autotile/icon_coordinate = Vector2( 0, 0 )
3/autotile/tile_size = Vector2( 336, 336 )
3/autotile/spacing = 0
3/autotile/occluder_map = [  ]
3/autotile/navpoly_map = [  ]
3/autotile/priority_map = [  ]
3/autotile/z_index_map = [  ]
3/occluder_offset = Vector2( 0, 0 )
3/navigation_offset = Vector2( 0, 0 )
3/shape_offset = Vector2( 0, 0 )
3/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
3/shape = SubResource( 151 )
3/shape_one_way = false
3/shape_one_way_margin = 1.0
3/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 151 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 152 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 153 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 154 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 155 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 156 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 157 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 158 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 159 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 160 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 161 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 162 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 163 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 164 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 165 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 166 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 167 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 168 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 169 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 170 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 171 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 172 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 173 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 174 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 175 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 176 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 177 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 178 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 179 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 180 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 181 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 182 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 183 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 184 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 185 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 186 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 10, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 187 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 188 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 189 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 190 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 10, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 191 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 10, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 192 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 193 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 194 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 10, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 195 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 11, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 196 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
3/z_index = 0

[sub_resource type="RectangleShape2D" id=202]

[node name="JawbreakerRoom" type="Node2D"]
script = ExtResource( 3 )
level_range_x = Vector2( 0, 680 )
level_range_y = Vector2( 0, 380 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.9, 1 )
motion_offset = Vector2( -100, 0 )

[node name="UndergroundBackground" parent="ParallaxBackground/ParallaxLayer" instance=ExtResource( 10 )]
scale = Vector2( 0.07, 0.07 )
tile_data = PoolIntArray( -196606, 0, 3, -196605, 0, 196613, -196604, 0, 196612, -196603, 0, 196612, -196602, 0, 196613, -196601, 0, 4, -65537, 0, 3, -131072, 0, 196614, -131071, 0, 196614, -131070, 0, 131073, -131069, 0, 131078, -131068, 0, 131078, -131067, 0, 131076, -131066, 0, 131077, -131065, 0, 65537, -131064, 0, 196612, -131063, 0, 196613, -131062, 0, 196613, -131061, 0, 196611, -131060, 0, 4, -1, 0, 327682, -65536, 0, 196609, -65535, 0, 196609, -65534, 0, 131077, -65533, 0, 131074, -65532, 0, 131076, -65531, 0, 131075, -65530, 0, 196610, -65529, 0, 131074, -65528, 0, 131075, -65527, 0, 131076, -65526, 0, 131078, -65525, 0, 196610, -65524, 0, 65537, -65523, 0, 5, 65534, 0, 3, 65535, 0, 131073, 0, 0, 196608, 1, 0, 131075, 2, 0, 196609, 3, 0, 131076, 4, 0, 196609, 5, 0, 131075, 6, 0, 196609, 7, 0, 131077, 8, 0, 131075, 9, 0, 196610, 10, 0, 131075, 11, 0, 131077, 12, 0, 196610, 13, 0, 65537, 14, 0, 196611, 15, 0, 4, 131070, 0, 327681, 131071, 0, 196610, 65536, 0, 131074, 65537, 0, 131076, 65538, 0, 196608, 65539, 0, 131074, 65540, 0, 196608, 65541, 0, 196608, 65542, 0, 131074, 65543, 0, 131074, 65544, 0, 131074, 65545, 0, 131075, 65546, 0, 196609, 65547, 0, 131076, 65548, 0, 131078, 65549, 0, 196610, 65550, 0, 65540, 65551, 0, 6, 196606, 0, 327681, 196607, 0, 131074, 131072, 0, 131076, 131073, 0, 131076, 131074, 0, 196610, 131075, 0, 196610, 131076, 0, 131076, 131077, 0, 131074, 131078, 0, 131074, 131079, 0, 131075, 131080, 0, 131078, 131081, 0, 131077, 131082, 0, 131077, 131083, 0, 196609, 131084, 0, 131077, 131085, 0, 196609, 131086, 0, 262147, 262142, 0, 327683, 262143, 0, 196609, 196608, 0, 196610, 196609, 0, 196608, 196610, 0, 196609, 196611, 0, 131076, 196612, 0, 196609, 196613, 0, 131074, 196614, 0, 131076, 196615, 0, 131074, 196616, 0, 196609, 196617, 0, 131078, 196618, 0, 131076, 196619, 0, 196610, 196620, 0, 196609, 196621, 0, 196609, 196622, 0, 262145, 327678, 0, 327682, 327679, 0, 196608, 262144, 0, 131077, 262145, 0, 131078, 262146, 0, 196610, 262147, 0, 131075, 262148, 0, 131078, 262149, 0, 131074, 262150, 0, 131078, 262151, 0, 131074, 262152, 0, 131077, 262153, 0, 131077, 262154, 0, 196610, 262155, 0, 131076, 262156, 0, 196608, 262157, 0, 196609, 262158, 0, 65537, 262159, 0, 4, 393214, 0, 327682, 393215, 0, 196609, 327680, 0, 196609, 327681, 0, 131077, 327682, 0, 131077, 327683, 0, 196608, 327684, 0, 131075, 327685, 0, 196609, 327686, 0, 131075, 327687, 0, 196610, 327688, 0, 131076, 327689, 0, 131078, 327690, 0, 131074, 327691, 0, 131077, 327692, 0, 131077, 327693, 0, 196608, 327694, 0, 131078, 327695, 0, 262146, 458750, 0, 0, 458751, 0, 65541, 393216, 0, 131075, 393217, 0, 196610, 393218, 0, 131075, 393219, 0, 196610, 393220, 0, 196608, 393221, 0, 131074, 393222, 0, 131074, 393223, 0, 131077, 393224, 0, 196609, 393225, 0, 196608, 393226, 0, 131078, 393227, 0, 196608, 393228, 0, 131074, 393229, 0, 131076, 393230, 0, 131077, 393231, 0, 262146, 524287, 0, 327684, 458752, 0, 131074, 458753, 0, 196610, 458754, 0, 131075, 458755, 0, 196609, 458756, 0, 131074, 458757, 0, 196608, 458758, 0, 196608, 458759, 0, 131074, 458760, 0, 196610, 458761, 0, 196609, 458762, 0, 131075, 458763, 0, 196609, 458764, 0, 196608, 458765, 0, 196608, 458766, 0, 65540, 458767, 0, 65536, 589823, 0, 0, 524288, 0, 327680, 524289, 0, 65542, 524290, 0, 196608, 524291, 0, 131075, 524292, 0, 131076, 524293, 0, 131074, 524294, 0, 131074, 524295, 0, 131076, 524296, 0, 131077, 524297, 0, 131077, 524298, 0, 131078, 524299, 0, 131077, 524300, 0, 131078, 524301, 0, 131074, 524302, 0, 262144, 589825, 0, 0, 589826, 0, 262149, 589827, 0, 262148, 589828, 0, 262150, 589829, 0, 262150, 589830, 0, 262149, 589831, 0, 262150, 589832, 0, 262150, 589833, 0, 262150, 589834, 0, 262148, 589835, 0, 262150, 589836, 0, 262150, 589837, 0, 262149, 589838, 0, 6 )

[node name="JawbreakerBossRoom720p" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
material = SubResource( 198 )
position = Vector2( 342.148, 204.391 )
scale = Vector2( 0.540292, 0.540292 )
texture = ExtResource( 8 )
normal_map = ExtResource( 9 )

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 341, 198 )
current = true
zoom = Vector2( 0.353, 0.353 )

[node name="ColorRect" type="ColorRect" parent="."]
margin_top = -3.0
margin_right = 40.0
margin_bottom = 37.0
rect_scale = Vector2( 17.9306, 11.7638 )
color = Color( 0, 0, 0, 0.270588 )

[node name="Light2D" type="Light2D" parent="."]
visible = false
position = Vector2( 335, 200 )
scale = Vector2( 2.125, 1.70508 )
texture = ExtResource( 1 )
energy = 0.7

[node name="Pillar720p" type="Sprite" parent="."]
material = SubResource( 200 )
position = Vector2( 343, 198 )
scale = Vector2( 0.530587, 0.530587 )
texture = ExtResource( 6 )
normal_map = ExtResource( 2 )

[node name="TileMap" parent="." instance=ExtResource( 7 )]
tile_set = SubResource( 201 )
tile_data = PoolIntArray( -65538, 3, 8, -65537, 3, 262153, -131072, 3, 262154, -131071, 3, 10, -131070, 3, 10, -131069, 3, 262154, -131068, 3, 262153, -131067, 3, 262153, -131066, 3, 262155, -131065, 3, 262155, -131064, 3, 262154, -131063, 3, 262155, -131062, 3, 10, -131061, 3, 262154, -131060, 3, 262155, -131059, 3, 262154, -131058, 3, 10, -131057, 3, 262153, -131056, 3, 262155, -131055, 3, 262155, -131054, 3, 262154, -131053, 3, 10, -131052, 3, 262153, -131051, 3, 10, -131050, 3, 10, -131049, 3, 262153, -131048, 3, 262153, -131047, 3, 10, -131046, 3, 262153, -131045, 3, 10, -131044, 3, 262155, -131043, 3, 10, -131042, 3, 11, -2, 3, 65544, -1, 3, 131078, -65536, 3, 196617, -65535, 3, 196617, -65534, 3, 196617, -65533, 3, 196617, -65532, 3, 196617, -65531, 3, 196617, -65530, 3, 196617, -65529, 3, 196617, -65528, 3, 196617, -65527, 3, 196617, -65526, 3, 196617, -65525, 3, 196617, -65524, 3, 196617, -65523, 3, 196617, -65522, 3, 196617, -65521, 3, 196617, -65520, 3, 196617, -65519, 3, 196617, -65518, 3, 196617, -65517, 3, 196617, -65516, 3, 196617, -65515, 3, 196617, -65514, 3, 196617, -65513, 3, 196617, -65512, 3, 196617, -65511, 3, 196617, -65510, 3, 196617, -65509, 3, 196617, -65508, 3, 196617, -65507, 3, 131077, -65506, 3, 131083, 65534, 3, 65544, 65535, 3, 131083, 29, 3, 65544, 30, 3, 131083, 131070, 3, 65544, 131071, 3, 131083, 65565, 3, 65544, 65566, 3, 131083, 196606, 3, 65544, 196607, 3, 131083, 131101, 3, 65544, 131102, 3, 131083, 262142, 3, 65544, 262143, 3, 131083, 196637, 3, 65544, 196638, 3, 131083, 327678, 3, 65544, 327679, 3, 131083, 262173, 3, 65544, 262174, 3, 131083, 393214, 3, 65544, 393215, 3, 131083, 327709, 3, 65544, 327710, 3, 131083, 458750, 3, 65544, 458751, 3, 131083, 393245, 3, 65544, 393246, 3, 131083, 524286, 3, 65544, 524287, 3, 131083, 458781, 3, 65544, 458782, 3, 131083, 589822, 3, 65544, 589823, 3, 131083, 524317, 3, 65544, 524318, 3, 131083, 655358, 3, 65544, 655359, 3, 131083, 589853, 3, 65544, 589854, 3, 131083, 720894, 3, 65544, 720895, 3, 131083, 655389, 3, 65544, 655390, 3, 131083, 786430, 3, 65544, 786431, 3, 131083, 720925, 3, 65544, 720926, 3, 131083, 851966, 3, 65544, 851967, 3, 131083, 786461, 3, 65544, 786462, 3, 131083, 917502, 3, 65544, 917503, 3, 131083, 851997, 3, 65544, 851998, 3, 131083, 983038, 3, 65544, 983039, 3, 131083, 917533, 3, 65544, 917534, 3, 131083, 1048574, 3, 65544, 1048575, 3, 131083, 983069, 3, 65544, 983070, 3, 131083, 1114110, 3, 65544, 1114111, 3, 65542, 1048576, 3, 262155, 1048577, 3, 262154, 1048578, 3, 262154, 1048579, 3, 262153, 1048580, 3, 262154, 1048581, 3, 262155, 1048582, 3, 262153, 1048583, 3, 262153, 1048584, 3, 262155, 1048585, 3, 262155, 1048586, 3, 262155, 1048587, 3, 262155, 1048588, 3, 10, 1048589, 3, 10, 1048590, 3, 262153, 1048591, 3, 262154, 1048592, 3, 262155, 1048593, 3, 262154, 1048594, 3, 262153, 1048595, 3, 262155, 1048596, 3, 262154, 1048597, 3, 262154, 1048598, 3, 262154, 1048599, 3, 262154, 1048600, 3, 262154, 1048601, 3, 10, 1048602, 3, 10, 1048603, 3, 10, 1048604, 3, 262155, 1048605, 3, 65541, 1048606, 3, 131083, 1179646, 3, 65544, 1179647, 3, 131081, 1114112, 3, 131081, 1114113, 3, 131081, 1114114, 3, 131081, 1114115, 3, 131081, 1114116, 3, 131081, 1114117, 3, 131081, 1114118, 3, 131081, 1114119, 3, 131081, 1114120, 3, 131081, 1114121, 3, 131081, 1114122, 3, 131081, 1114123, 3, 131081, 1114124, 3, 131081, 1114125, 3, 131081, 1114126, 3, 131081, 1114127, 3, 131081, 1114128, 3, 131081, 1114129, 3, 131081, 1114130, 3, 131081, 1114131, 3, 131081, 1114132, 3, 131081, 1114133, 3, 131081, 1114134, 3, 131081, 1114135, 3, 131081, 1114136, 3, 131081, 1114137, 3, 131081, 1114138, 3, 131081, 1114139, 3, 131081, 1114140, 3, 131081, 1114141, 3, 131081, 1114142, 3, 131083, 1245182, 3, 196616, 1245183, 3, 196617, 1179648, 3, 196617, 1179649, 3, 196617, 1179650, 3, 196617, 1179651, 3, 196617, 1179652, 3, 196617, 1179653, 3, 196617, 1179654, 3, 196617, 1179655, 3, 196617, 1179656, 3, 196617, 1179657, 3, 196617, 1179658, 3, 196617, 1179659, 3, 196617, 1179660, 3, 196617, 1179661, 3, 196617, 1179662, 3, 196617, 1179663, 3, 196617, 1179664, 3, 196617, 1179665, 3, 196617, 1179666, 3, 196617, 1179667, 3, 196617, 1179668, 3, 196617, 1179669, 3, 196617, 1179670, 3, 196617, 1179671, 3, 196617, 1179672, 3, 196617, 1179673, 3, 196617, 1179674, 3, 196617, 1179675, 3, 196617, 1179676, 3, 196617, 1179677, 3, 196617, 1179678, 3, 196619 )

[node name="EnemyCounter" parent="." instance=ExtResource( 11 )]
enemies = [ NodePath("../JawbreakerEnemy4"), NodePath("../JawbreakerEnemy6"), NodePath("../JawbreakerEnemy7"), NodePath("../JawbreakerEnemy5") ]

[node name="JawbreakerEnemy4" parent="." instance=ExtResource( 12 )]
position = Vector2( 249, 361 )

[node name="JawbreakerEnemy6" parent="." instance=ExtResource( 12 )]
position = Vector2( 449, 360 )

[node name="JawbreakerEnemy7" parent="." instance=ExtResource( 12 )]
position = Vector2( 622, 361 )

[node name="JawbreakerEnemy5" parent="." instance=ExtResource( 12 )]
position = Vector2( 64, 364 )

[node name="JawbreakerBoss" parent="." instance=ExtResource( 13 )]
position = Vector2( -1, -2 )

[node name="BreakablePlatformMedium" parent="." instance=ExtResource( 14 )]
position = Vector2( 342, 320 )
scale = Vector2( 0.3, 0.2 )

[node name="Wall" type="Area2D" parent="." groups=["wall"]]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Wall" groups=["wall"]]
position = Vector2( -4, 326 )
shape = SubResource( 202 )

[node name="Wall2" type="Area2D" parent="." groups=["wall"]]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Wall2" groups=["wall"]]
position = Vector2( 687, 330 )
shape = SubResource( 202 )

[connection signal="on" from="EnemyCounter" to="JawbreakerBoss" method="_on_EnemyCounter_on"]
